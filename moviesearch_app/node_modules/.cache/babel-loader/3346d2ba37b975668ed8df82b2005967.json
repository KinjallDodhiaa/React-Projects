{"ast":null,"code":"export const getResults = searchValue => {\n  return new Promise((resolve, reject) => {\n    const apiKey = process.env.REACT_APP_API_KEY;\n    const url = `http://www.omdbapi.com/?s=${searchValue}&type=movie&type=series&apikey=${apiKey}`;\n    fetch(url).then(response => {\n      if (response.status === 200) {\n        response.json().then(data => {\n          resolve(data);\n        }).catch(error => {\n          reject(error);\n        });\n      } else {\n        reject(response.status);\n      }\n    }).catch(error => {\n      reject(error);\n    });\n  });\n}; // http://www.omdbapi.com/?s=${searchValue}&type=movie&apikey=263d22d8\n\nexport const getMovieResults = searchValue => {\n  return new Promise((resolve, reject) => {\n    const apiKey = process.env.REACT_APP_API_KEY;\n    const url = `http://www.omdbapi.com/?s=${searchValue}&type=movie&apikey=${apiKey}`;\n    fetch(url).then(response => {\n      if (response.status === 200) {\n        response.json().then(data => {\n          resolve(data);\n        }).catch(error => {\n          reject(error);\n        });\n      } else {\n        reject(response.status);\n      }\n    }).catch(error => {\n      reject(error);\n    });\n  });\n};\nexport const getSeriesResults = searchValue => {\n  return new Promise((resolve, reject) => {\n    const apiKey = process.env.REACT_APP_API_KEY;\n    const url = `http://www.omdbapi.com/?s=${searchValue}&type=series&apikey=${apiKey}`;\n    fetch(url).then(response => {\n      if (response.status === 200) {\n        response.json().then(data => {\n          resolve(data);\n        }).catch(error => {\n          reject(error);\n        });\n      } else {\n        reject(response.status);\n      }\n    }).catch(error => {\n      reject(error);\n    });\n  });\n};","map":{"version":3,"sources":["/home/dci/Desktop/FbW43-2/React/React_Final_Project/moviesearch_app/src/api/index.js"],"names":["getResults","searchValue","Promise","resolve","reject","apiKey","process","env","REACT_APP_API_KEY","url","fetch","then","response","status","json","data","catch","error","getMovieResults","getSeriesResults"],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAIC,WAAD,IAAiB;AACzC,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,UAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAA3B;AACA,UAAMC,GAAG,GAAI,6BAA4BR,WAAY,kCAAiCI,MAAO,EAA7F;AACAK,IAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACSC,QAAD,IAAc;AAClB,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3BD,QAAAA,QAAQ,CACLE,IADH,GAEGH,IAFH,CAESI,IAAD,IAAU;AACdZ,UAAAA,OAAO,CAACY,IAAD,CAAP;AACD,SAJH,EAKGC,KALH,CAKUC,KAAD,IAAW;AAChBb,UAAAA,MAAM,CAACa,KAAD,CAAN;AACD,SAPH;AAQD,OATD,MASO;AACLb,QAAAA,MAAM,CAACQ,QAAQ,CAACC,MAAV,CAAN;AACD;AACF,KAdH,EAeGG,KAfH,CAeUC,KAAD,IAAW;AAChBb,MAAAA,MAAM,CAACa,KAAD,CAAN;AACD,KAjBH;AAkBD,GArBM,CAAP;AAsBD,CAvBM,C,CAyBP;;AAEA,OAAO,MAAMC,eAAe,GAAIjB,WAAD,IAAiB;AAC9C,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,UAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAA3B;AACA,UAAMC,GAAG,GAAI,6BAA4BR,WAAY,sBAAqBI,MAAO,EAAjF;AACAK,IAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACSC,QAAD,IAAc;AAClB,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3BD,QAAAA,QAAQ,CACLE,IADH,GAEGH,IAFH,CAESI,IAAD,IAAU;AACdZ,UAAAA,OAAO,CAACY,IAAD,CAAP;AACD,SAJH,EAKGC,KALH,CAKUC,KAAD,IAAW;AAChBb,UAAAA,MAAM,CAACa,KAAD,CAAN;AACD,SAPH;AAQD,OATD,MASO;AACLb,QAAAA,MAAM,CAACQ,QAAQ,CAACC,MAAV,CAAN;AACD;AACF,KAdH,EAeGG,KAfH,CAeUC,KAAD,IAAW;AAChBb,MAAAA,MAAM,CAACa,KAAD,CAAN;AACD,KAjBH;AAkBD,GArBM,CAAP;AAsBD,CAvBM;AAyBP,OAAO,MAAME,gBAAgB,GAAIlB,WAAD,IAAiB;AAC/C,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,UAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAA3B;AACA,UAAMC,GAAG,GAAI,6BAA4BR,WAAY,uBAAsBI,MAAO,EAAlF;AACAK,IAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACSC,QAAD,IAAc;AAClB,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3BD,QAAAA,QAAQ,CACLE,IADH,GAEGH,IAFH,CAESI,IAAD,IAAU;AACdZ,UAAAA,OAAO,CAACY,IAAD,CAAP;AACD,SAJH,EAKGC,KALH,CAKUC,KAAD,IAAW;AAChBb,UAAAA,MAAM,CAACa,KAAD,CAAN;AACD,SAPH;AAQD,OATD,MASO;AACLb,QAAAA,MAAM,CAACQ,QAAQ,CAACC,MAAV,CAAN;AACD;AACF,KAdH,EAeGG,KAfH,CAeUC,KAAD,IAAW;AAChBb,MAAAA,MAAM,CAACa,KAAD,CAAN;AACD,KAjBH;AAkBD,GArBM,CAAP;AAsBD,CAvBM","sourcesContent":["export const getResults = (searchValue) => {\n  return new Promise((resolve, reject) => {\n    const apiKey = process.env.REACT_APP_API_KEY;\n    const url = `http://www.omdbapi.com/?s=${searchValue}&type=movie&type=series&apikey=${apiKey}`;\n    fetch(url)\n      .then((response) => {\n        if (response.status === 200) {\n          response\n            .json()\n            .then((data) => {\n              resolve(data);\n            })\n            .catch((error) => {\n              reject(error);\n            });\n        } else {\n          reject(response.status);\n        }\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\n// http://www.omdbapi.com/?s=${searchValue}&type=movie&apikey=263d22d8\n\nexport const getMovieResults = (searchValue) => {\n  return new Promise((resolve, reject) => {\n    const apiKey = process.env.REACT_APP_API_KEY;\n    const url = `http://www.omdbapi.com/?s=${searchValue}&type=movie&apikey=${apiKey}`;\n    fetch(url)\n      .then((response) => {\n        if (response.status === 200) {\n          response\n            .json()\n            .then((data) => {\n              resolve(data);\n            })\n            .catch((error) => {\n              reject(error);\n            });\n        } else {\n          reject(response.status);\n        }\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\nexport const getSeriesResults = (searchValue) => {\n  return new Promise((resolve, reject) => {\n    const apiKey = process.env.REACT_APP_API_KEY;\n    const url = `http://www.omdbapi.com/?s=${searchValue}&type=series&apikey=${apiKey}`;\n    fetch(url)\n      .then((response) => {\n        if (response.status === 200) {\n          response\n            .json()\n            .then((data) => {\n              resolve(data);\n            })\n            .catch((error) => {\n              reject(error);\n            });\n        } else {\n          reject(response.status);\n        }\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};"]},"metadata":{},"sourceType":"module"}