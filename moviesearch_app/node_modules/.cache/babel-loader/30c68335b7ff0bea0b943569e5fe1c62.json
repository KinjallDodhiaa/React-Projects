{"ast":null,"code":"var _jsxFileName = \"/home/dci/Desktop/FbW43-2/React/React_Final_Project/moviesearch_app/src/components/seriesgallery.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Card, Col, Container, Image, Modal, Row } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { addToFavorite } from \"../action\";\nimport * as BsIcons from \"react-icons/bs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SeriesGallery = props => {\n  _s();\n\n  const [series, setSeries] = useState({\n    show: false,\n    seriesPreview: \"\",\n    title: \"\",\n    type: \"\",\n    year: \"\"\n  });\n\n  const handleClose = () => setSeries({\n    show: false,\n    seriesPreview: \"\",\n    title: \"\",\n    type: \"\",\n    year: \"\"\n  });\n\n  const seriesShow = (poster, title, type, year) => {\n    setSeries({\n      show: true,\n      moviePreview: poster,\n      title: title,\n      type: type,\n      year: year\n    });\n  };\n\n  const addBtnFav = elm => {\n    props.addToFavorite(elm);\n  };\n\n  switch (props.data.status) {\n    case \"START\":\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"LOADING...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 14\n      }, this);\n\n    case \"FAILED\":\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"FAILED\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 14\n      }, this);\n\n    case \"SUCCESS\":\n      return /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: props.data.data.map((elm, idx) => elm.Type === \"series\" ? /*#__PURE__*/_jsxDEV(Col, {\n            className: \"p-3\",\n            lg: \"3\",\n            md: \"3\",\n            sm: \"1\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: \"cardBorder\",\n              style: {\n                width: \"15rem\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                className: \"objectfit\",\n                variant: \"top\",\n                src: elm.Poster,\n                height: \"300\",\n                onClick: () => seriesShow(elm.Poster, elm.Title, elm.Type, elm.Year)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                className: \"cardBodyColor\",\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  className: \"text-center cardTitleHeight\",\n                  children: /*#__PURE__*/_jsxDEV(\"h6\", {\n                    children: elm.Title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 63,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  className: \"text-center\",\n                  children: elm.Type\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 21\n              }, this), !props.favList.some(e => e.imdbID === elm.imdbID) ? /*#__PURE__*/_jsxDEV(BsIcons.BsFillStarFill, {\n                className: \"fav-icon\",\n                onClick: () => {\n                  addBtnFav(elm);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(BsIcons.BsBookmarkCheck, {\n                className: \"bookmark-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 19\n            }, this)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this) : null)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          show: series.show,\n          onHide: handleClose,\n          children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n            closeButton: true,\n            style: {\n              backgroundColor: \"#030617\"\n            },\n            className: \"cardBorder \",\n            children: /*#__PURE__*/_jsxDEV(Image, {\n              className: \"modalImg\",\n              fluid: true,\n              src: series.moviePreview\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n            className: \"cardBodyColor cardBorder\",\n            children: [/*#__PURE__*/_jsxDEV(Modal.Title, {\n              children: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: `Type: ${movie.type}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: `Year: ${movie.year}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this);\n\n    default:\n      return null;\n  }\n};\n\n_s(SeriesGallery, \"gcziLHha7GaaThYYFwr0jUdBHiw=\");\n\n_c = SeriesGallery;\n\nconst mapStateToProps = state => {\n  return {\n    data: state.seriesResults,\n    favList: state.favoriteResults\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addToFavorite\n})(SeriesGallery);\n\nvar _c;\n\n$RefreshReg$(_c, \"SeriesGallery\");","map":{"version":3,"sources":["/home/dci/Desktop/FbW43-2/React/React_Final_Project/moviesearch_app/src/components/seriesgallery.js"],"names":["React","useState","Card","Col","Container","Image","Modal","Row","connect","addToFavorite","BsIcons","SeriesGallery","props","series","setSeries","show","seriesPreview","title","type","year","handleClose","seriesShow","poster","moviePreview","addBtnFav","elm","data","status","map","idx","Type","width","Poster","Title","Year","favList","some","e","imdbID","backgroundColor","movie","mapStateToProps","state","seriesResults","favoriteResults"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport { Card, Col, Container, Image, Modal, Row } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { addToFavorite } from \"../action\";\nimport * as BsIcons from \"react-icons/bs\";\n\nconst SeriesGallery = (props) => {\n\n      const [series, setSeries] = useState({\n        show: false,\n        seriesPreview: \"\",\n        title: \"\",\n        type: \"\",\n        year: \"\",\n      });\n\n      const handleClose = () =>\n        setSeries({\n          show: false,\n          seriesPreview: \"\",\n          title: \"\",\n          type: \"\",\n          year: \"\",\n        });\n\n      const seriesShow = (poster, title, type, year) => {\n        setSeries({\n          show: true,\n          moviePreview: poster,\n          title: title,\n          type: type,\n          year: year,\n        });\n      };\n\n     const addBtnFav = (elm) => {\n       props.addToFavorite(elm);\n     };\n  switch (props.data.status) {\n    case \"START\":\n      return <h1>LOADING...</h1>;\n    case \"FAILED\":\n      return <h1>FAILED</h1>;\n    case \"SUCCESS\":\n      return (\n        <Container>\n          <Row>\n            {props.data.data.map((elm, idx) =>\n              elm.Type === \"series\" ? (\n                <Col key={idx} className=\"p-3\" lg=\"3\" md=\"3\" sm=\"1\">\n                  <Card className=\"cardBorder\" style={{ width: \"15rem\" }}>\n                    <Card.Img\n                      className=\"objectfit\"\n                      variant=\"top\"\n                      src={elm.Poster}\n                      height=\"300\"\n                      onClick={() =>\n                        seriesShow(elm.Poster, elm.Title, elm.Type, elm.Year)\n                      }\n                    />\n                    <Card.Body className=\"cardBodyColor\">\n                      <Card.Title className=\"text-center cardTitleHeight\">\n                        <h6>{elm.Title}</h6>\n                      </Card.Title>\n\n                      <Card.Text className=\"text-center\">{elm.Type}</Card.Text>\n                    </Card.Body>\n                    {!props.favList.some((e) => e.imdbID === elm.imdbID) ? (\n                      <BsIcons.BsFillStarFill\n                        className=\"fav-icon\"\n                        onClick={() => {\n                          addBtnFav(elm);\n                        }}\n                      />\n                    ) : (\n                      <BsIcons.BsBookmarkCheck className=\"bookmark-icon\" />\n                    )}\n\n                    {/* <Card.Text className=\"text-center\">{elm.Type}</Card.Text> */}\n                  </Card>\n                </Col>\n              ) : null\n            )}\n          </Row>\n          <Modal show={series.show} onHide={handleClose}>\n            <Modal.Header\n              closeButton\n              style={{ backgroundColor: \"#030617\" }}\n              className=\"cardBorder \"\n            >\n              <Image className=\"modalImg\" fluid src={series.moviePreview} />\n            </Modal.Header>\n            <Modal.Body className=\"cardBodyColor cardBorder\">\n              <Modal.Title>{movie.title}</Modal.Title>\n              <p>{`Type: ${movie.type}`}</p>\n              <p>{`Year: ${movie.year}`}</p>\n            </Modal.Body>\n          </Modal>\n        </Container>\n      );\n    default:\n      return null;\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    data: state.seriesResults,\n    favList: state.favoriteResults,\n  };\n};\n\nexport default connect(mapStateToProps,{addToFavorite})(SeriesGallery);\n"]},"metadata":{},"sourceType":"module"}