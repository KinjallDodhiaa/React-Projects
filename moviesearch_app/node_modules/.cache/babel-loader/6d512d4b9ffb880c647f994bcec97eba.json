{"ast":null,"code":"var _jsxFileName = \"/home/dci/Desktop/FbW43-2/React/React_Final_Project/moviesearch_app/src/components/seriesgallery.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Card, Col, Container, Image, Modal, Row } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { addToFavorite } from \"../action\";\nimport * as BsIcons from \"react-icons/bs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SeriesGallery = props => {\n  _s();\n\n  const [series, setSeries] = useState({\n    show: false,\n    seriesPreview: \"\",\n    title: \"\",\n    type: \"\",\n    year: \"\"\n  });\n\n  const handleClose = () => setSeries({\n    show: false,\n    seriesPreview: \"\",\n    title: \"\",\n    type: \"\",\n    year: \"\"\n  });\n\n  const seriesShow = (poster, title, type, year) => {\n    setSeries({\n      show: true,\n      moviePreview: poster,\n      title: title,\n      type: type,\n      year: year\n    });\n  };\n\n  const addBtnFav = elm => {\n    props.addToFavorite(elm);\n  };\n\n  switch (props.data.status) {\n    case \"START\":\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"LOADING...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 14\n      }, this);\n\n    case \"FAILED\":\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"FAILED\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 14\n      }, this);\n\n    case \"SUCCESS\":\n      return /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: props.data.data.map((elm, idx) => elm.Type === 'series' ? /*#__PURE__*/_jsxDEV(Col, {\n            className: \"mt-3 mb-3\",\n            lg: \"3\",\n            md: \"4\",\n            sm: \"12\",\n            xs: \"12\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: \"m-auto\",\n              style: {\n                width: \"14rem\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                variant: \"top\",\n                src: elm.Poster,\n                height: \"300\",\n                className: \"objectfit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                className: \"cardBodyColor\",\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  style: {\n                    height: \"2.2rem\"\n                  },\n                  className: \"text-center\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    style: {\n                      fontSize: \"14px\"\n                    },\n                    children: elm.Title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 21\n                }, this), !props.favList.some(e => e.imdbID === elm.imdbID) ? /*#__PURE__*/_jsxDEV(BsIcons.BsFillStarFill, {\n                  style: {\n                    cursor: \"pointer\"\n                  },\n                  size: 25,\n                  onClick: () => {\n                    addBtnFav(elm);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(BsIcons.BsBookmarkCheck, {\n                  size: 25\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this) : null)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          show: series.show,\n          onHide: handleClose,\n          children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n            style: {\n              backgroundColor: \"#030617\"\n            },\n            className: \"cardBorder \",\n            children: /*#__PURE__*/_jsxDEV(Image, {\n              className: \"modalImg\",\n              fluid: true,\n              src: series.moviePreview\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n            className: \"cardBodyColor\",\n            children: [/*#__PURE__*/_jsxDEV(Modal.Title, {\n              children: series.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: `Type: ${series.type}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: `Year: ${series.year}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n            className: \"cardBodyColor\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"cardBodyColor m-auto\",\n              variant: \"secondary\",\n              onClick: handleClose,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this);\n\n    default:\n      return null;\n  }\n};\n\n_s(SeriesGallery, \"gcziLHha7GaaThYYFwr0jUdBHiw=\");\n\n_c = SeriesGallery;\n\nconst mapStateToProps = state => {\n  return {\n    data: state.seriesResults,\n    favList: state.favoriteResults\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addToFavorite\n})(SeriesGallery);\n\nvar _c;\n\n$RefreshReg$(_c, \"SeriesGallery\");","map":{"version":3,"sources":["/home/dci/Desktop/FbW43-2/React/React_Final_Project/moviesearch_app/src/components/seriesgallery.js"],"names":["React","useState","Button","Card","Col","Container","Image","Modal","Row","connect","addToFavorite","BsIcons","SeriesGallery","props","series","setSeries","show","seriesPreview","title","type","year","handleClose","seriesShow","poster","moviePreview","addBtnFav","elm","data","status","map","idx","Type","width","Poster","height","fontSize","Title","favList","some","e","imdbID","cursor","backgroundColor","mapStateToProps","state","seriesResults","favoriteResults"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport { Button, Card, Col, Container, Image, Modal, Row } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { addToFavorite } from \"../action\";\nimport * as BsIcons from \"react-icons/bs\";\n\nconst SeriesGallery = (props) => {\n\n      const [series, setSeries] = useState({\n        show: false,\n        seriesPreview: \"\",\n        title: \"\",\n        type: \"\",\n        year: \"\",\n      });\n\n      const handleClose = () =>\n        setSeries({\n          show: false,\n          seriesPreview: \"\",\n          title: \"\",\n          type: \"\",\n          year: \"\",\n        });\n\n      const seriesShow = (poster, title, type, year) => {\n        setSeries({\n          show: true,\n          moviePreview: poster,\n          title: title,\n          type: type,\n          year: year,\n        });\n      };\n\n     const addBtnFav = (elm) => {\n       props.addToFavorite(elm);\n     };\n\n  switch (props.data.status) {\n    case \"START\":\n      return <h1>LOADING...</h1>;\n    case \"FAILED\":\n      return <h1>FAILED</h1>;\n    case \"SUCCESS\":\n      return (\n        <Container>\n          <Row>\n\n            {props.data.data.map((elm, idx) => (\n              elm.Type==='series'?(\n              <Col\n                key={idx}\n                className=\"mt-3 mb-3\"\n                lg=\"3\"\n                md=\"4\"\n                sm=\"12\"\n                xs=\"12\"\n              >\n                <Card className=\"m-auto\" style={{ width: \"14rem\" }}>\n                  <Card.Img \n                  variant=\"top\" \n                  src={elm.Poster} \n                  height=\"300\"\n                  className=\"objectfit\"\n                  \n                   />\n                  <Card.Body className=\"cardBodyColor\">\n                    <Card.Title\n                      style={{ height: \"2.2rem\" }}\n                      className=\"text-center\"\n                    >\n                      <p style={{ fontSize: \"14px\" }}>{elm.Title}</p>\n                    </Card.Title>\n                    {!props.favList.some((e) => e.imdbID === elm.imdbID) ? (\n                      <BsIcons.BsFillStarFill\n                        style={{ cursor: \"pointer\" }}\n                        size={25}\n                        onClick={() => {\n                          addBtnFav(elm);\n                        }}\n                      />\n                    ) : (\n                      <BsIcons.BsBookmarkCheck size={25} />\n                    )}\n                  </Card.Body>\n                </Card>\n              </Col>):null\n            ))}\n\n\n              \n       </Row>\n          <Modal show={series.show} onHide={handleClose}>\n            <Modal.Header\n              style={{ backgroundColor: \"#030617\" }}\n              className=\"cardBorder \"\n            >\n              <Image className=\"modalImg\" fluid src={series.moviePreview} />\n            </Modal.Header>\n            <Modal.Body className=\"cardBodyColor\">\n              <Modal.Title>{series.title}</Modal.Title>\n              <p>{`Type: ${series.type}`}</p>\n              <p>{`Year: ${series.year}`}</p>\n            </Modal.Body>\n            <Modal.Footer className=\"cardBodyColor\">\n              <Button\n                className=\"cardBodyColor m-auto\"\n                variant=\"secondary\"\n                onClick={handleClose}\n              >\n                Close\n              </Button>\n            </Modal.Footer>\n          </Modal>\n        </Container>\n      );\n    default:\n      return null;\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    data: state.seriesResults,\n    favList: state.favoriteResults,\n  };\n};\n\nexport default connect(mapStateToProps, { addToFavorite })(SeriesGallery);\n"]},"metadata":{},"sourceType":"module"}