{"ast":null,"code":"var _jsxFileName = \"/home/dci/Desktop/FbW43-2/React/React_Final_Project/moviesearch_app/src/components/seriesgallery.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Card, Col, Container, Row } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { addToFavorite } from \"../action\";\nimport * as BsIcons from \"react-icons/bs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SeriesGallery = props => {\n  _s();\n\n  const [series, setSeries] = useState({\n    show: false,\n    moviePreview: \"\",\n    title: \"\",\n    type: \"\",\n    year: \"\"\n  });\n\n  const handleClose = () => setMovie({\n    show: false,\n    moviePreview: \"\",\n    title: \"\",\n    type: \"\",\n    year: \"\"\n  });\n\n  const movieShow = (poster, title, type, year) => {\n    setMovie({\n      show: true,\n      moviePreview: poster,\n      title: title,\n      type: type,\n      year: year\n    });\n  };\n\n  const addBtnFav = elm => {\n    props.addToFavorite(elm);\n  };\n\n  switch (props.data.status) {\n    case \"START\":\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"LOADING...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 14\n      }, this);\n\n    case \"FAILED\":\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"FAILED\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 14\n      }, this);\n\n    case \"SUCCESS\":\n      return /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: props.data.data.map((elm, idx) => elm.Type === \"series\" ? /*#__PURE__*/_jsxDEV(Col, {\n            className: \"p-3\",\n            lg: \"3\",\n            md: \"3\",\n            sm: \"1\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: \"cardBorder\",\n              style: {\n                width: \"15rem\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                className: \"objectfit\",\n                variant: \"top\",\n                src: elm.Poster,\n                height: \"300\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                className: \"cardBodyColor\",\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  className: \"text-center cardTitleHeight\",\n                  children: /*#__PURE__*/_jsxDEV(\"h6\", {\n                    children: elm.Title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 60,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  className: \"text-center\",\n                  children: elm.Type\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 21\n              }, this), !props.favList.some(e => e.imdbID === elm.imdbID) ? /*#__PURE__*/_jsxDEV(BsIcons.BsFillStarFill, {\n                className: \"fav-icon\",\n                onClick: () => {\n                  addBtnFav(elm);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(BsIcons.BsBookmarkCheck, {\n                className: \"bookmark-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 19\n            }, this)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this) : null)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this);\n\n    default:\n      return null;\n  }\n};\n\n_s(SeriesGallery, \"UkdoPjis85ZbTgoZUxJevfU1j6w=\");\n\n_c = SeriesGallery;\n\nconst mapStateToProps = state => {\n  return {\n    data: state.seriesResults,\n    favList: state.favoriteResults\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addToFavorite\n})(SeriesGallery);\n\nvar _c;\n\n$RefreshReg$(_c, \"SeriesGallery\");","map":{"version":3,"sources":["/home/dci/Desktop/FbW43-2/React/React_Final_Project/moviesearch_app/src/components/seriesgallery.js"],"names":["React","Card","Col","Container","Row","connect","addToFavorite","BsIcons","SeriesGallery","props","series","setSeries","useState","show","moviePreview","title","type","year","handleClose","setMovie","movieShow","poster","addBtnFav","elm","data","status","map","idx","Type","width","Poster","Title","favList","some","e","imdbID","mapStateToProps","state","seriesResults","favoriteResults"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Card, Col, Container, Row } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { addToFavorite } from \"../action\";\nimport * as BsIcons from \"react-icons/bs\";\n\nconst SeriesGallery = (props) => {\n\n      const [series, setSeries] = useState({\n        show: false,\n        moviePreview: \"\",\n        title: \"\",\n        type: \"\",\n        year: \"\",\n      });\n\n      const handleClose = () =>\n        setMovie({\n          show: false,\n          moviePreview: \"\",\n          title: \"\",\n          type: \"\",\n          year: \"\",\n        });\n\n      const movieShow = (poster, title, type, year) => {\n        setMovie({\n          show: true,\n          moviePreview: poster,\n          title: title,\n          type: type,\n          year: year,\n        });\n      };\n\n     const addBtnFav = (elm) => {\n       props.addToFavorite(elm);\n     };\n  switch (props.data.status) {\n    case \"START\":\n      return <h1>LOADING...</h1>;\n    case \"FAILED\":\n      return <h1>FAILED</h1>;\n    case \"SUCCESS\":\n      return (\n        <Container>\n          <Row>\n            {props.data.data.map((elm, idx) =>\n              elm.Type === \"series\" ? (\n                <Col key={idx} className=\"p-3\" lg=\"3\" md=\"3\" sm=\"1\">\n                  <Card className='cardBorder' style={{ width: \"15rem\" }}>\n                    <Card.Img\n                      className=\"objectfit\"\n                      variant=\"top\"\n                      src={elm.Poster}\n                      height=\"300\"\n                    />\n                    <Card.Body className=\"cardBodyColor\">\n                      <Card.Title className=\"text-center cardTitleHeight\">\n                        <h6>{elm.Title}</h6>\n                      </Card.Title>\n\n                      <Card.Text className=\"text-center\">{elm.Type}</Card.Text>\n                    </Card.Body> \n                    {!props.favList.some((e) => e.imdbID === elm.imdbID) ? (\n                      <BsIcons.BsFillStarFill\n                        className=\"fav-icon\"\n                        onClick={() => {\n                          addBtnFav(elm);\n                        }}\n                      />\n                    ) : (\n                      <BsIcons.BsBookmarkCheck className=\"bookmark-icon\" />\n                    )}\n\n                      {/* <Card.Text className=\"text-center\">{elm.Type}</Card.Text> */}\n\n                  </Card>\n                </Col>\n              ) : null\n            )}\n          </Row>\n        </Container>\n      );\n    default:\n      return null;\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    data: state.seriesResults,\n    favList: state.favoriteResults,\n  };\n};\n\nexport default connect(mapStateToProps,{addToFavorite})(SeriesGallery);\n"]},"metadata":{},"sourceType":"module"}