{"ast":null,"code":"var _jsxFileName = \"/home/dci/Desktop/FbW43-2/React/React_Final_Project/moviesearch_app/src/pages/movies.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { getResults } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Movies = () => {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    getResults().then(data => {\n      setMovies(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Movies, \"+jZiGaK1IrFkDFSplSYv9W7La4s=\");\n\n_c = Movies;\n\nconst mapStateToProps = state => {\n  return {\n    data: state.results\n  };\n};\n\nexport default connect(mapStateToProps)(Movies);\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["/home/dci/Desktop/FbW43-2/React/React_Final_Project/moviesearch_app/src/pages/movies.js"],"names":["React","useEffect","useState","connect","getResults","Movies","movies","setMovies","then","data","mapStateToProps","state","results"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,UAAT,QAA2B,QAA3B;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAEjB,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAqBL,QAAQ,CAAC,EAAD,CAAnC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,UAAU,GAAGI,IAAb,CAAkBC,IAAI,IAAE;AACpBF,MAAAA,SAAS,CAACE,IAAD,CAAT;AACH,KAFD;AAGH,GAJQ,EAIN,EAJM,CAAT;AAOA,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAhBD;;GAAMJ,M;;KAAAA,M;;AAkBN,MAAMK,eAAe,GAAIC,KAAD,IAAU;AAC9B,SAAM;AACFF,IAAAA,IAAI,EAACE,KAAK,CAACC;AADT,GAAN;AAGH,CAJD;;AAMA,eAAeT,OAAO,CAACO,eAAD,CAAP,CAAyBL,MAAzB,CAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {connect} from 'react-redux';\nimport { getResults } from '../api';\n\nconst Movies = () => {\n\n    const [movies,setMovies] = useState([]);\n\n    useEffect(() => {\n        getResults().then(data=>{\n            setMovies(data)\n        })\n    }, [])\n    \n\n    return (\n        <div>\n            \n        </div>\n    );\n};\n\nconst mapStateToProps = (state)=> {\n    return{\n        data:state.results\n    }\n}\n\nexport default connect(mapStateToProps)(Movies) ;"]},"metadata":{},"sourceType":"module"}