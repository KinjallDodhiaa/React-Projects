{"ast":null,"code":"var _jsxFileName = \"/home/dci/Desktop/FbW43-2/React/React_Final_Project/moviesearch_app/src/components/moviegallery.js\";\nimport React from 'react';\nimport { Card, Container, Row } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MovieGallery = props => {\n  switch (props.data.status) {\n    case 'START':\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"LOADING...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 20\n      }, this);\n\n    case 'FAILED':\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"FAILED\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 20\n      }, this);\n\n    case 'SUCCESS':\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: props.data.data.map((elm, idx) => /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              lg: \"4\",\n              md: \"3\",\n              sm: \"1\",\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                style: {\n                  width: \"18rem\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                  variant: \"top\",\n                  src: elm.Poster,\n                  height: \"150\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 20,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                  children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                    children: elm.Title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 22,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                    children: elm.Type\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 23,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 21,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                  children: /*#__PURE__*/_jsxDEV(Card.Link, {\n                    href: \"#\",\n                    children: \"Card Link\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 27,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 26,\n                  columnNumber: 25\n                }, this)]\n              }, idx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 19,\n                columnNumber: 23\n              }, this)\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 19\n        }, this))\n      }, void 0, false);\n\n    default:\n      return null;\n  }\n};\n\n_c = MovieGallery;\n\nconst mapStateToProps = state => {\n  return {\n    data: state.results\n  };\n};\n\nexport default connect(mapStateToProps)(MovieGallery);\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieGallery\");","map":{"version":3,"sources":["/home/dci/Desktop/FbW43-2/React/React_Final_Project/moviesearch_app/src/components/moviegallery.js"],"names":["React","Card","Container","Row","connect","MovieGallery","props","data","status","map","elm","idx","width","Poster","Title","Type","mapStateToProps","state","results"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,GAA1B,QAAqC,iBAArC;AACA,SAASC,OAAT,QAAwB,aAAxB;;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5B,UAAQA,KAAK,CAACC,IAAN,CAAWC,MAAnB;AACI,SAAK,OAAL;AACI,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;;AACJ,SAAK,QAAL;AACI,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;;AACJ,SAAK,SAAL;AACI,0BACE;AAAA,kBACGF,KAAK,CAACC,IAAN,CAAWA,IAAX,CAAgBE,GAAhB,CAAoB,CAACC,GAAD,EAAMC,GAAN,kBACnB,QAAC,SAAD;AAAA,iCACE,QAAC,GAAD;AAAA,mCACA,QAAC,GAAD;AAAe,cAAA,EAAE,EAAC,GAAlB;AAAsB,cAAA,EAAE,EAAC,GAAzB;AAA6B,cAAA,EAAE,EAAC,GAAhC;AAAA,qCAEE,QAAC,IAAD;AAAgB,gBAAA,KAAK,EAAE;AAAEC,kBAAAA,KAAK,EAAE;AAAT,iBAAvB;AAAA,wCACE,QAAC,IAAD,CAAM,GAAN;AAAU,kBAAA,OAAO,EAAC,KAAlB;AAAwB,kBAAA,GAAG,EAAEF,GAAG,CAACG,MAAjC;AAAyC,kBAAA,MAAM,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,IAAD,CAAM,IAAN;AAAA,0CACE,QAAC,IAAD,CAAM,KAAN;AAAA,8BAAaH,GAAG,CAACI;AAAjB;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE,QAAC,IAAD,CAAM,IAAN;AAAA,8BAAYJ,GAAG,CAACK;AAAhB;AAAA;AAAA;AAAA;AAAA,0BAFF;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,eAOE,QAAC,IAAD,CAAM,IAAN;AAAA,yCACE,QAAC,IAAD,CAAM,IAAN;AAAW,oBAAA,IAAI,EAAC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBAPF;AAAA,iBAAWJ,GAAX;AAAA;AAAA;AAAA;AAAA;AAFF,eAAUA,GAAV;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADD;AADH,uBADF;;AAwBJ;AAAS,aAAO,IAAP;AA9Bb;AAiCH,CAlCD;;KAAMN,Y;;AAoCN,MAAMW,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHV,IAAAA,IAAI,EAAEU,KAAK,CAACC;AADT,GAAP;AAGH,CAJD;;AAMA,eAAed,OAAO,CAACY,eAAD,CAAP,CAAyBX,YAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { Card, Container, Row } from 'react-bootstrap';\nimport { connect } from 'react-redux';\n\nconst MovieGallery = (props) => {\n    switch (props.data.status) {\n        case 'START':\n            return <h1>LOADING...</h1>;\n        case 'FAILED':\n            return <h1>FAILED</h1>;\n        case 'SUCCESS':\n            return (\n              <>\n                {props.data.data.map((elm, idx) => (\n                  <Container>\n                    <Row>\n                    <Col key={idx} lg=\"4\" md=\"3\" sm=\"1\">\n\n                      <Card key={idx} style={{ width: \"18rem\" }}>\n                        <Card.Img variant=\"top\" src={elm.Poster} height=\"150\" />\n                        <Card.Body>\n                          <Card.Title>{elm.Title}</Card.Title>\n                          <Card.Text>{elm.Type}</Card.Text>\n                        </Card.Body>\n\n                        <Card.Body>\n                          <Card.Link href=\"#\">Card Link</Card.Link>\n                        </Card.Body>\n                      </Card>\n                      </Col>\n                    </Row>\n                  </Container>\n                ))}\n              </>\n            );\n        default: return null\n\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        data: state.results\n    }\n}\n\nexport default connect(mapStateToProps)(MovieGallery);"]},"metadata":{},"sourceType":"module"}