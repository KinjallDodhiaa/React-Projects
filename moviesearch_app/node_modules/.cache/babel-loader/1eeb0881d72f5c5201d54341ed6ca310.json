{"ast":null,"code":"var _jsxFileName = \"/home/dci/Desktop/FbW43-2/React/React_Final_Project/moviesearch_app/src/components/searchgallery.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Card, Container, Row, Col, Modal, Button, Image } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { addToFavorite } from \"../action\";\nimport * as BsIcons from \"react-icons/bs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchGallery = props => {\n  _s();\n\n  const addBtnFav = elm => {\n    props.addToFavorite(elm);\n    console.log(\"this is add fav\" + elm);\n  };\n\n  const [preview, setPreview] = useState({\n    show: false,\n    moviePreview: '',\n    title: '',\n    type: '',\n    year: ''\n  });\n\n  const handleClose = () => setPreview({\n    show: false,\n    moviePreview: '',\n    title: '',\n    type: '',\n    year: ''\n  });\n\n  const previewShow = (poster, title, type, year) => {\n    setPreview({\n      show: true,\n      moviePreview: poster,\n      title: title,\n      type: type,\n      year: year\n    });\n  };\n\n  switch (props.data.status) {\n    case \"START\":\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"LOADING...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 14\n      }, this);\n\n    case \"FAILED\":\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"FAILED\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 14\n      }, this);\n\n    case \"SUCCESS\":\n      return /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: props.data.data.map((elm, idx) => /*#__PURE__*/_jsxDEV(Col, {\n            sm: \"12\",\n            md: \"4\",\n            lg: \"3\",\n            className: \"p\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: \"mt-4 mb-4\",\n              style: {\n                width: \"14rem\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                onClick: () => previewShow(elm.Poster, elm.Title, elm.Type, elm.Year),\n                onClick: () => previewShow(elm.Poster, elm.Title, elm.Type, elm.Year),\n                className: \"objectfit\",\n                variant: \"top\",\n                src: elm.Poster,\n                height: \"300\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  children: /*#__PURE__*/_jsxDEV(\"h6\", {\n                    children: elm.Title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 53,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 21\n                }, this), !props.favList.some(e => e.imdbID === elm.imdbID) ? /*#__PURE__*/_jsxDEV(BsIcons.BsFillStarFill, {\n                  className: \"fav-icon\",\n                  onClick: () => {\n                    addBtnFav(elm);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(BsIcons.BsBookmarkCheck, {\n                  className: \"bookmark-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, this)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          show: preview.show,\n          onHide: handleClose,\n          children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n            style: {\n              backgroundColor: \"#030617\"\n            },\n            className: \"cardBorder\",\n            children: /*#__PURE__*/_jsxDEV(Image, {\n              className: \"modalImg\",\n              fluid: true,\n              src: preview.moviePreview\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n            className: \"cardBodyColor cardBorder\",\n            children: [/*#__PURE__*/_jsxDEV(Modal.Title, {\n              children: preview.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: `Type: ${preview.type}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: `Year: ${preview.year}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n            className: \"cardBodyColor cardBorder\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"cardBodyColor modalFooter\",\n              variant: \"secondary\",\n              onClick: handleClose,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this);\n\n    default:\n      return null;\n  }\n};\n\n_s(SearchGallery, \"fTvVh/o0qKrAXRtVKps7I76j+30=\");\n\n_c = SearchGallery;\n\nconst mapStateToProps = state => {\n  return {\n    data: state.results,\n    favList: state.favoriteResults\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addToFavorite\n})(SearchGallery);\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchGallery\");","map":{"version":3,"sources":["/home/dci/Desktop/FbW43-2/React/React_Final_Project/moviesearch_app/src/components/searchgallery.js"],"names":["React","useState","Card","Container","Row","Col","Modal","Button","Image","connect","addToFavorite","BsIcons","SearchGallery","props","addBtnFav","elm","console","log","preview","setPreview","show","moviePreview","title","type","year","handleClose","previewShow","poster","data","status","map","idx","width","Poster","Title","Type","Year","favList","some","e","imdbID","backgroundColor","mapStateToProps","state","results","favoriteResults"],"mappings":"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","sourcesContent":["\nimport React, { useState } from \"react\";\nimport { Card, Container, Row, Col, Modal, Button, Image } from \"react-bootstrap\";\n\nimport { connect } from \"react-redux\";\nimport { addToFavorite } from \"../action\";\nimport * as BsIcons from \"react-icons/bs\";\n\nconst SearchGallery = (props) => {\n\n  const addBtnFav = (elm) => {\n    props.addToFavorite(elm);\n    console.log(\"this is add fav\" + elm);\n  };\n\n\n  const [preview, setPreview] = useState({ show: false, moviePreview: '', title: '', type: '', year: '' });\n\n  const handleClose = () => setPreview({ show: false, moviePreview: '', title: '', type: '', year: '' });\n\n  const previewShow = (poster, title, type, year) => {\n    setPreview({ show: true, moviePreview: poster, title: title, type: type, year: year })\n\n  }\n\n\n  switch (props.data.status) {\n    case \"START\":\n      return <h1>LOADING...</h1>;\n    case \"FAILED\":\n      return <h1>FAILED</h1>;\n    case \"SUCCESS\":\n      return (\n        <Container>\n          <Row>\n            {props.data.data.map((elm, idx) => (\n              <Col key={idx} sm='12' md='4' lg='3' className='p'>\n                <Card className='mt-4 mb-4' style={{ width: \"14rem\" }}>\n                  <Card.Img\n                    onClick={() =>\n                      previewShow(elm.Poster, elm.Title, elm.Type, elm.Year)\n                    }\n                    onClick={() =>\n                      previewShow(elm.Poster, elm.Title, elm.Type, elm.Year)\n                    }\n                    className=\"objectfit\"\n                    variant=\"top\"\n                    src={elm.Poster}\n                    height=\"300\"\n                  />\n                  <Card.Body>\n                    <Card.Title>\n                      <h6>{elm.Title}</h6>\n                    </Card.Title>\n                    {!props.favList.some((e) => e.imdbID === elm.imdbID) ? (\n                      <BsIcons.BsFillStarFill\n                        className=\"fav-icon\"\n                        onClick={() => {\n                          addBtnFav(elm);\n                        }}\n                      />\n                    ) : (\n                      <BsIcons.BsBookmarkCheck className=\"bookmark-icon\" />\n                    )}\n\n                    {/* <Card.Text className=\"text-center\">{elm.Type}</Card.Text> */}\n                  </Card.Body>\n                </Card>\n              </Col>\n            ))}\n          </Row>\n\n          <Modal show={preview.show} onHide={handleClose}>\n            <Modal.Header\n              style={{ backgroundColor: \"#030617\" }}\n              className=\"cardBorder\"\n            >\n              <Image className=\"modalImg\" fluid src={preview.moviePreview} />\n            </Modal.Header>\n            <Modal.Body className=\"cardBodyColor cardBorder\">\n              <Modal.Title>{preview.title}</Modal.Title>\n              <p>{`Type: ${preview.type}`}</p>\n              <p>{`Year: ${preview.year}`}</p>\n            </Modal.Body>\n\n            <Modal.Footer className=\"cardBodyColor cardBorder\">\n              <Button\n                className=\"cardBodyColor modalFooter\"\n                variant=\"secondary\"\n                onClick={handleClose}\n              >\n                Close\n              </Button>\n            </Modal.Footer>\n          </Modal>\n        </Container>\n      );\n    default:\n      return null;\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    data: state.results,\n    favList: state.favoriteResults,\n  };\n};\n\nexport default connect(mapStateToProps, { addToFavorite })(SearchGallery);\n"]},"metadata":{},"sourceType":"module"}