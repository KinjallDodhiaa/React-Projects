{"ast":null,"code":"import { getResults, getSeriesResults, getMovieResults } from \"../api\";\nexport const getSearchData = result => {\n  return dispatch => {\n    dispatch({\n      type: \"START\",\n      payload: []\n    });\n    getResults(result).then(data => {\n      dispatch({\n        type: \"SUCCESS\",\n        payload: data\n      });\n    }).catch(error => {\n      dispatch({\n        type: \"FAILED\",\n        payload: error\n      });\n    });\n  };\n};\nexport const getMovieData = movie => {\n  return dispatch => {\n    dispatch({\n      type: \"MOVIE_START\",\n      payload: []\n    });\n    getMovieResults(movie).then(data => {\n      dispatch({\n        type: \"MOVIE_SUCCESS\",\n        payload: data\n      });\n    }).catch(error => {\n      dispatch({\n        type: \"MOVIE_FAILED\",\n        payload: error\n      });\n    });\n  };\n};\nexport const getSeriesData = series => {\n  return dispatch => {\n    dispatch({\n      type: \"SERIES_START\",\n      payload: []\n    });\n    getSeriesResults(series).then(data => {\n      dispatch({\n        type: \"SERIES_SUCCESS\",\n        payload: data\n      });\n    }).catch(error => {\n      dispatch({\n        type: \"SERIES_FAILED\",\n        payload: error\n      });\n    });\n  };\n};\nexport const addToFavorite = elm => {\n  return {\n    type: \"ADD_TO_FAVORITE\",\n    payload: elm\n  };\n};\nexport const removeFavorite = idx => {\n  return {\n    type: \"REMOVE_FAVORITE\",\n    payload: idx\n  };\n};\nexport const selectIndexAction = idx => {\n  return {\n    type: \"SELECT_INDEX\",\n    payload: idx\n  };\n};","map":{"version":3,"sources":["/home/dci/Desktop/FbW43-2/React/React_Final_Project/moviesearch_app/src/action/index.js"],"names":["getResults","getSeriesResults","getMovieResults","getSearchData","result","dispatch","type","payload","then","data","catch","error","getMovieData","movie","getSeriesData","series","addToFavorite","elm","removeFavorite","idx","selectIndexAction"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,gBAArB,EAAuCC,eAAvC,QAA8D,QAA9D;AAEA,OAAO,MAAMC,aAAa,GAAIC,MAAD,IAAY;AACvC,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAE,OADC;AAEPC,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAIAP,IAAAA,UAAU,CAACI,MAAD,CAAV,CACGI,IADH,CACSC,IAAD,IAAU;AACdJ,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAE,SADC;AAEPC,QAAAA,OAAO,EAAEE;AAFF,OAAD,CAAR;AAID,KANH,EAOGC,KAPH,CAOUC,KAAD,IAAW;AAChBN,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAE,QADC;AAEPC,QAAAA,OAAO,EAAEI;AAFF,OAAD,CAAR;AAID,KAZH;AAaD,GAlBD;AAmBD,CApBM;AAsBP,OAAO,MAAMC,YAAY,GAAIC,KAAD,IAAW;AACrC,SAAQR,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAE,aADC;AAEPC,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAIAL,IAAAA,eAAe,CAACW,KAAD,CAAf,CACGL,IADH,CACSC,IAAD,IAAU;AACdJ,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAE,eADC;AAEPC,QAAAA,OAAO,EAAEE;AAFF,OAAD,CAAR;AAID,KANH,EAOGC,KAPH,CAOUC,KAAD,IAAW;AAChBN,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAE,cADC;AAEPC,QAAAA,OAAO,EAAEI;AAFF,OAAD,CAAR;AAID,KAZH;AAaD,GAlBD;AAmBD,CApBM;AAsBP,OAAO,MAAMG,aAAa,GAAIC,MAAD,IAAY;AACvC,SAAQV,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAE,cADC;AAEPC,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAIAN,IAAAA,gBAAgB,CAACc,MAAD,CAAhB,CACGP,IADH,CACSC,IAAD,IAAU;AACdJ,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAE,gBADC;AAEPC,QAAAA,OAAO,EAAEE;AAFF,OAAD,CAAR;AAID,KANH,EAOGC,KAPH,CAOUC,KAAD,IAAW;AAChBN,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAE,eADC;AAEPC,QAAAA,OAAO,EAAEI;AAFF,OAAD,CAAR;AAID,KAZH;AAaD,GAlBD;AAmBD,CApBM;AAuBP,OAAO,MAAMK,aAAa,GAAIC,GAAD,IAAS;AACpC,SAAO;AACLX,IAAAA,IAAI,EAAE,iBADD;AAELC,IAAAA,OAAO,EAAEU;AAFJ,GAAP;AAID,CALM;AAMP,OAAO,MAAMC,cAAc,GAAIC,GAAD,IAAS;AACrC,SAAO;AACLb,IAAAA,IAAI,EAAE,iBADD;AAELC,IAAAA,OAAO,EAAEY;AAFJ,GAAP;AAID,CALM;AAQP,OAAO,MAAMC,iBAAiB,GAAID,GAAD,IAAS;AACxC,SAAO;AACLb,IAAAA,IAAI,EAAE,cADD;AAELC,IAAAA,OAAO,EAAEY;AAFJ,GAAP;AAID,CALM","sourcesContent":["import { getResults, getSeriesResults, getMovieResults } from \"../api\";\n\nexport const getSearchData = (result) => {\n  return (dispatch) => {\n    dispatch({\n      type: \"START\",\n      payload: [],\n    });\n    getResults(result)\n      .then((data) => {\n        dispatch({\n          type: \"SUCCESS\",\n          payload: data,\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: \"FAILED\",\n          payload: error,\n        });\n      });\n  };\n};\n\nexport const getMovieData = (movie) => {\n  return (dispatch) => {\n    dispatch({\n      type: \"MOVIE_START\",\n      payload: [],\n    });\n    getMovieResults(movie)\n      .then((data) => {\n        dispatch({\n          type: \"MOVIE_SUCCESS\",\n          payload: data,\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: \"MOVIE_FAILED\",\n          payload: error,\n        });\n      });\n  };\n};\n\nexport const getSeriesData = (series) => {\n  return (dispatch) => {\n    dispatch({\n      type: \"SERIES_START\",\n      payload: [],\n    });\n    getSeriesResults(series)\n      .then((data) => {\n        dispatch({\n          type: \"SERIES_SUCCESS\",\n          payload: data,\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: \"SERIES_FAILED\",\n          payload: error,\n        });\n      });\n  };\n};\n\n\nexport const addToFavorite = (elm) => {\n  return {\n    type: \"ADD_TO_FAVORITE\",\n    payload: elm,\n  };\n};\nexport const removeFavorite = (idx) => {\n  return {\n    type: \"REMOVE_FAVORITE\",\n    payload: idx,\n  };\n};\n\n\nexport const selectIndexAction = (idx) => {\n  return {\n    type: \"SELECT_INDEX\",\n    payload: idx\n  };\n}\n\n"]},"metadata":{},"sourceType":"module"}