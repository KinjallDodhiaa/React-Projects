{"ast":null,"code":"var _jsxFileName = \"/home/dci/Desktop/FbW43-2/React/React_Final_Project/moviesearch_app/src/components/searchgallery.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Card, Container, Row, Col, Modal, Button, Image } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchGallery = props => {\n  _s();\n\n  const [preview, setPreview] = useState({\n    show: false,\n    moviePreview: '',\n    title: '',\n    type: '',\n    year: ''\n  });\n\n  const handleClose = () => setPreview({\n    show: false,\n    moviePreview: '',\n    title: '',\n    type: '',\n    year: ''\n  });\n\n  const previewShow = (poster, title, type, year) => {\n    setPreview({\n      show: true,\n      moviePreview: poster,\n      title: title,\n      type: type,\n      year: year\n    });\n  };\n\n  switch (props.data.status) {\n    case \"START\":\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"LOADING...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 14\n      }, this);\n\n    case \"FAILED\":\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"FAILED\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 14\n      }, this);\n\n    case \"SUCCESS\":\n      return /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: props.data.data.map((elm, idx) => /*#__PURE__*/_jsxDEV(Col, {\n            className: \"p-3\",\n            lg: \"3\",\n            md: \"3\",\n            sm: \"1\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: \"cardBorder\",\n              style: {\n                width: \"15rem\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                onClick: () => previewShow(elm.Poster, elm.Title, elm.Type, elm.Year),\n                className: \"objectfit\",\n                variant: \"top\",\n                src: elm.Poster,\n                height: \"300\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                className: \"cardBodyColor\",\n                children: /*#__PURE__*/_jsxDEV(Card.Title, {\n                  className: \"text-center cardTitleHeight\",\n                  children: /*#__PURE__*/_jsxDEV(\"h6\", {\n                    children: elm.Title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 37,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 17\n            }, this)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          show: preview.show,\n          onHide: handleClose,\n          children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n            closeButton: true,\n            children: /*#__PURE__*/_jsxDEV(Image, {\n              fluid: true,\n              src: preview.moviePreview\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Modal.Title, {\n              children: preview.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: preview.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: preview.year\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              onClick: handleClose,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: handleClose,\n              children: \"Save Changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this);\n\n    default:\n      return null;\n  }\n};\n\n_s(SearchGallery, \"Rv3f2oQghnhmnnOGRSgb3jNb4Ik=\");\n\n_c = SearchGallery;\n\nconst mapStateToProps = state => {\n  return {\n    data: state.results\n  };\n};\n\nexport default connect(mapStateToProps)(SearchGallery);\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchGallery\");","map":{"version":3,"sources":["/home/dci/Desktop/FbW43-2/React/React_Final_Project/moviesearch_app/src/components/searchgallery.js"],"names":["React","useState","Card","Container","Row","Col","Modal","Button","Image","connect","SearchGallery","props","preview","setPreview","show","moviePreview","title","type","year","handleClose","previewShow","poster","data","status","map","elm","idx","width","Poster","Title","Type","Year","mapStateToProps","state","results"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,GAA1B,EAA+BC,GAA/B,EAAoCC,KAApC,EAA2CC,MAA3C,EAAmDC,KAAnD,QAAgE,iBAAhE;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAE/B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC;AAAEa,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,YAAY,EAAE,EAA7B;AAAiCC,IAAAA,KAAK,EAAE,EAAxC;AAA4CC,IAAAA,IAAI,EAAC,EAAjD;AAAqDC,IAAAA,IAAI,EAAC;AAA1D,GAAD,CAAtC;;AAEA,QAAMC,WAAW,GAAG,MAAMN,UAAU,CAAC;AAAEC,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,YAAY,EAAE,EAA7B;AAAiCC,IAAAA,KAAK,EAAE,EAAxC;AAA4CC,IAAAA,IAAI,EAAE,EAAlD;AAAsDC,IAAAA,IAAI,EAAE;AAA5D,GAAD,CAApC;;AAEA,QAAME,WAAW,GAAG,CAACC,MAAD,EAAQL,KAAR,EAAcC,IAAd,EAAmBC,IAAnB,KAA2B;AAC7CL,IAAAA,UAAU,CAAC;AAAEC,MAAAA,IAAI,EAAE,IAAR;AAAcC,MAAAA,YAAY,EAACM,MAA3B;AAAkCL,MAAAA,KAAK,EAACA,KAAxC;AAA8CC,MAAAA,IAAI,EAACA,IAAnD;AAAwDC,MAAAA,IAAI,EAACA;AAA7D,KAAD,CAAV;AAED,GAHD;;AAKA,UAAQP,KAAK,CAACW,IAAN,CAAWC,MAAnB;AACE,SAAK,OAAL;AACE,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;;AACF,SAAK,QAAL;AACE,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;;AACF,SAAK,SAAL;AACE,0BACE,QAAC,SAAD;AAAA,gCACE,QAAC,GAAD;AAAA,oBACGZ,KAAK,CAACW,IAAN,CAAWA,IAAX,CAAgBE,GAAhB,CAAoB,CAACC,GAAD,EAAMC,GAAN,kBACnB,QAAC,GAAD;AAAe,YAAA,SAAS,EAAC,KAAzB;AAA+B,YAAA,EAAE,EAAC,GAAlC;AAAsC,YAAA,EAAE,EAAC,GAAzC;AAA6C,YAAA,EAAE,EAAC,GAAhD;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,SAAS,EAAC,YAAhB;AAA6B,cAAA,KAAK,EAAE;AAAEC,gBAAAA,KAAK,EAAE;AAAT,eAApC;AAAA,sCACE,QAAC,IAAD,CAAM,GAAN;AACE,gBAAA,OAAO,EAAE,MAAIP,WAAW,CAACK,GAAG,CAACG,MAAL,EAAYH,GAAG,CAACI,KAAhB,EAAsBJ,GAAG,CAACK,IAA1B,EAA+BL,GAAG,CAACM,IAAnC,CAD1B;AAEE,gBAAA,SAAS,EAAC,WAFZ;AAGE,gBAAA,OAAO,EAAC,KAHV;AAIE,gBAAA,GAAG,EAAEN,GAAG,CAACG,MAJX;AAKE,gBAAA,MAAM,EAAC;AALT;AAAA;AAAA;AAAA;AAAA,sBADF,eAQE,QAAC,IAAD,CAAM,IAAN;AAAW,gBAAA,SAAS,EAAC,eAArB;AAAA,uCACE,QAAC,IAAD,CAAM,KAAN;AAAY,kBAAA,SAAS,EAAC,6BAAtB;AAAA,yCACE;AAAA,8BAAKH,GAAG,CAACI;AAAT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,aAAUH,GAAV;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBADF,eAsBE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAEd,OAAO,CAACE,IAArB;AAA2B,UAAA,MAAM,EAAEK,WAAnC;AAAA,kCACE,QAAC,KAAD,CAAO,MAAP;AAAc,YAAA,WAAW,MAAzB;AAAA,mCACE,QAAC,KAAD;AAAO,cAAA,KAAK,MAAZ;AAAa,cAAA,GAAG,EAAEP,OAAO,CAACG;AAA1B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE,QAAC,KAAD,CAAO,IAAP;AAAA,oCACE,QAAC,KAAD,CAAO,KAAP;AAAA,wBAAcH,OAAO,CAACI;AAAtB;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,wBAAIJ,OAAO,CAACK;AAAZ;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA,wBAAIL,OAAO,CAACM;AAAZ;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,eAWE,QAAC,KAAD,CAAO,MAAP;AAAA,oCACE,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,WAAhB;AAA4B,cAAA,OAAO,EAAEC,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,SAAhB;AAA0B,cAAA,OAAO,EAAEA,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;;AA6CF;AACE,aAAO,IAAP;AApDJ;AAsDD,CAjED;;GAAMT,a;;KAAAA,a;;AAmEN,MAAMsB,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLX,IAAAA,IAAI,EAAEW,KAAK,CAACC;AADP,GAAP;AAGD,CAJD;;AAMA,eAAezB,OAAO,CAACuB,eAAD,CAAP,CAAyBtB,aAAzB,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Card, Container, Row, Col, Modal, Button, Image } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\n\nconst SearchGallery = (props) => {\n\n  const [preview, setPreview] = useState({ show: false, moviePreview: '', title: '', type:'', year:'' });\n\n  const handleClose = () => setPreview({ show: false, moviePreview: '', title: '', type: '', year: '' });\n \n  const previewShow = (poster,title,type,year) =>{\n    setPreview({ show: true, moviePreview:poster,title:title,type:type,year:year })\n\n  }\n\n  switch (props.data.status) {\n    case \"START\":\n      return <h1>LOADING...</h1>;\n    case \"FAILED\":\n      return <h1>FAILED</h1>;\n    case \"SUCCESS\":\n      return (\n        <Container>\n          <Row>\n            {props.data.data.map((elm, idx) => (\n              <Col key={idx} className=\"p-3\" lg=\"3\" md=\"3\" sm=\"1\">\n                <Card className='cardBorder' style={{ width: \"15rem\" }}>\n                  <Card.Img\n                    onClick={()=>previewShow(elm.Poster,elm.Title,elm.Type,elm.Year)}\n                    className=\"objectfit\"\n                    variant=\"top\"\n                    src={elm.Poster}\n                    height=\"300\"\n                  />\n                  <Card.Body className=\"cardBodyColor\">\n                    <Card.Title className=\"text-center cardTitleHeight\">\n                      <h6>{elm.Title}</h6>\n                    </Card.Title>\n                    {/* <Card.Text className=\"text-center\">{elm.Type}</Card.Text> */}\n                  </Card.Body>\n                </Card>\n              </Col>\n            ))}\n          </Row>\n          <Modal show={preview.show} onHide={handleClose}>\n            <Modal.Header closeButton>\n              <Image fluid src={preview.moviePreview} />\n\n            </Modal.Header>\n            <Modal.Body>\n              <Modal.Title>{preview.title}</Modal.Title>\n              <p>{preview.type}</p>\n              <p>{preview.year}</p>\n\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={handleClose}>\n                Close\n          </Button>\n              <Button variant=\"primary\" onClick={handleClose}>\n                Save Changes\n          </Button>\n            </Modal.Footer>\n          </Modal>\n        </Container>\n      );\n    default:\n      return null;\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    data: state.results,\n  };\n};\n\nexport default connect(mapStateToProps)(SearchGallery);\n"]},"metadata":{},"sourceType":"module"}