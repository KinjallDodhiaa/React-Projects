{"ast":null,"code":"var _jsxFileName = \"/home/dci/Desktop/FbW43-2/React/React_Final_Project/moviesearch_app/src/components/searchgallery.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Card, Container, Row, Col, Modal, Button, Image } from \"react-bootstrap\";\nimport * as BsIcons from \"react-icons/bs\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchGallery = props => {\n  _s();\n\n  const addBtnFav = elm => {\n    props.addToFavorite(elm);\n    console.log(\"this is add fav\" + elm);\n  };\n\n  const [preview, setPreview] = useState({\n    show: false,\n    moviePreview: \"\",\n    title: \"\",\n    type: \"\",\n    year: \"\"\n  });\n\n  const handleClose = () => setPreview({\n    show: false,\n    moviePreview: \"\",\n    title: \"\",\n    type: \"\",\n    year: \"\"\n  });\n\n  const previewShow = (poster, title, type, year) => {\n    setPreview({\n      show: true,\n      moviePreview: poster,\n      title: title,\n      type: type,\n      year: year\n    });\n  };\n\n  switch (props.data.status) {\n    case \"START\":\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"LOADING...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 14\n      }, this);\n\n    case \"FAILED\":\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"FAILED\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 14\n      }, this);\n\n    case \"SUCCESS\":\n      return /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          className: \"mt-2\",\n          children: props.data.data.map((elm, idx) => /*#__PURE__*/_jsxDEV(Col, {\n            xs: 12,\n            sm: 12,\n            md: 4,\n            lg: 3,\n            className: \"mt-2\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: \"m-auto\",\n              style: {\n                width: \"14.7rem\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                onClick: () => previewShow(elm.Poster, elm.Title, elm.Type, elm.Year),\n                className: \"objectfit\",\n                variant: \"top\",\n                src: elm.Poster,\n                height: \"300\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                className: \"cardBodyColor\",\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  className: \"text-center\",\n                  style: {\n                    height: \"2.7rem\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    style: {\n                      fontSize: \"14px\"\n                    },\n                    children: elm.Title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 21\n                }, this), !props.favList.some(e => e.imdbID === elm.imdbID) ? /*#__PURE__*/_jsxDEV(BsIcons.BsFillStarFill, {\n                  style: {\n                    cursor: \"pointer\"\n                  },\n                  size: 25,\n                  onClick: () => {\n                    addBtnFav(elm);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(BsIcons.BsBookmarkCheck, {\n                  size: 25\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          className: \"modal-size\",\n          size: \"sm\",\n          show: preview.show,\n          \"aria-labelledby\": \"contained-modal-title-vcenter\",\n          centered: true,\n          children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n            style: {\n              backgroundColor: \"#030617\"\n            },\n            className: \"cardBorder\",\n            closeButton: true,\n            children: [/*#__PURE__*/_jsxDEV(Image, {\n              className: \"modalImg\",\n              fluid: true,\n              src: preview.moviePreview\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Modal.Title, {\n              id: \"contained-modal-title-vcenter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n            className: \"cardBodyColor cardBorder\",\n            children: [/*#__PURE__*/_jsxDEV(Modal.Title, {\n              children: preview.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: `Type: ${preview.type}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: `Year: ${preview.year}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this);\n\n    default:\n      return null;\n  }\n};\n\n_s(SearchGallery, \"Np5ZMVgXMcJ/FXWkmh1KpkMgzi0=\");\n\n_c = SearchGallery;\n\nconst mapStateToProps = state => {\n  return {\n    data: state.results\n  };\n};\n\nexport default connect(mapStateToProps)(SearchGallery);\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchGallery\");","map":{"version":3,"sources":["/home/dci/Desktop/FbW43-2/React/React_Final_Project/moviesearch_app/src/components/searchgallery.js"],"names":["React","useState","Card","Container","Row","Col","Modal","Button","Image","BsIcons","connect","SearchGallery","props","addBtnFav","elm","addToFavorite","console","log","preview","setPreview","show","moviePreview","title","type","year","handleClose","previewShow","poster","data","status","map","idx","width","Poster","Title","Type","Year","height","fontSize","favList","some","e","imdbID","cursor","backgroundColor","mapStateToProps","state","results"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Card,\n  Container,\n  Row,\n  Col,\n  Modal,\n  Button,\n  Image,\n} from \"react-bootstrap\";\nimport * as BsIcons from \"react-icons/bs\";\n\nimport { connect } from \"react-redux\";\nconst SearchGallery = (props) => {\n\n  const addBtnFav = (elm) => {\n    props.addToFavorite(elm);\n    console.log(\"this is add fav\" + elm);\n  };\n\n  const [preview, setPreview] = useState({\n    show: false,\n    moviePreview: \"\",\n    title: \"\",\n    type: \"\",\n    year: \"\",\n  });\n\n  const handleClose = () =>\n    setPreview({\n      show: false,\n      moviePreview: \"\",\n      title: \"\",\n      type: \"\",\n      year: \"\",\n    });\n\n  const previewShow = (poster, title, type, year) => {\n    setPreview({\n      show: true,\n      moviePreview: poster,\n      title: title,\n      type: type,\n      year: year,\n    });\n  };\n\n  switch (props.data.status) {\n    case \"START\":\n      return <h1>LOADING...</h1>;\n    case \"FAILED\":\n      return <h1>FAILED</h1>;\n    case \"SUCCESS\":\n      return (\n        <Container>\n          <Row className=\"mt-2\">\n            {props.data.data.map((elm, idx) => (  \n              <Col key={idx} xs={12} sm={12} md={4} lg={3} className=\"mt-2\">\n                <Card className=\"m-auto\" style={{ width: \"14.7rem\" }}>\n                  <Card.Img\n                    onClick={() =>\n                      previewShow(elm.Poster, elm.Title, elm.Type, elm.Year)\n                    }\n                    className=\"objectfit\"\n                    variant=\"top\"\n                    src={elm.Poster}\n                    height=\"300\"\n                  />\n                  <Card.Body className=\"cardBodyColor\">\n                    <Card.Title\n                      className=\"text-center\"\n                      style={{ height: \"2.7rem\" }}\n                    >\n                      <p style={{ fontSize: \"14px\" }}>{elm.Title}</p>\n                    </Card.Title>\n\n                    {!props.favList.some((e) => e.imdbID === elm.imdbID) ? (\n                      <BsIcons.BsFillStarFill\n                        style={{ cursor: \"pointer\" }}\n                        size={25}\n                        onClick={() => {\n                          addBtnFav(elm);\n                        }}\n                      />\n                    ) : (\n                      <BsIcons.BsBookmarkCheck size={25} />\n                    )}\n\n\n                    {/* <Card.Text className=\"text-center\">{elm.Type}</Card.Text> */}\n                  </Card.Body>\n                </Card>\n              </Col>\n            ))}\n          </Row>\n\n\n          {/* <Modal size=\"sm\" show={preview.show} onHide={handleClose}>\n            <Modal.Header\n              style={{ backgroundColor: \"#030617\" }}\n              className=\"cardBorder\"\n              closeButton\n            >\n              <Image className=\"modalImg\" fluid src={preview.moviePreview} />\n            </Modal.Header>\n            <Modal.Body className=\"cardBodyColor cardBorder\">\n\n          <Modal size=\"sm\" show={preview.show} onHide={handleClose}>\n            <Modal.Header>\n              <Image className=\"modalImg\" fluid src={preview.moviePreview} />\n            </Modal.Header>\n            <Modal.Body>\n              <h3>{preview.title}</h3>\n              <p>{preview.year}</p>\n\n          <Modal show={preview.show} onHide={handleClose}>\n            <Modal.Header style={{ backgroundColor: \"#030617\" }}>\n              <Image className=\"modalImg\" fluid src={preview.moviePreview} />\n            </Modal.Header>\n            <Modal.Body className=\"cardBodyColor\">\n\n              <Modal.Title>{preview.title}</Modal.Title>\n              <p>{`Type: ${preview.type}`}</p>\n              <p>{`Year: ${preview.year}`}</p>\n\n            </Modal.Body>\n            <Modal.Footer className=\"cardBodyColor\">\n              <Button\n                className=\"cardBodyColor m-auto\"\n                variant=\"secondary\"\n                onClick={handleClose}\n              >\n                Close\n              </Button>\n            </Modal.Footer>\n          </Modal> */}\n\n\n          <Modal\n            className=\"modal-size\"\n            size=\"sm\" show={preview.show}\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n          >\n            <Modal.Header\n              style={{ backgroundColor: \"#030617\" }}\n              className=\"cardBorder\"\n              closeButton>\n              <Image className=\"modalImg\" fluid src={preview.moviePreview} />\n              <Modal.Title id=\"contained-modal-title-vcenter\">\n              </Modal.Title>\n            </Modal.Header>\n            <Modal.Body className=\"cardBodyColor cardBorder\">\n              <Modal.Title>{preview.title}</Modal.Title>\n              <p>{`Type: ${preview.type}`}</p>\n              <p>{`Year: ${preview.year}`}</p>\n\n            </Modal.Body>\n          </Modal>\n\n        </Container>\n      );\n    default:\n      return null;\n  }\n};\nconst mapStateToProps = (state) => {\n  return {\n    data: state.results,\n  };\n};\nexport default connect(mapStateToProps)(SearchGallery);\n"]},"metadata":{},"sourceType":"module"}